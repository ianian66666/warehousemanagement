<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wmpn.mapper.ProductMapper">

<select id="findProductRowCount" resultType="java.lang.Integer">
    select count(*)
    from warehouse.product t1,
         warehouse.brand t2,
         warehouse.product_type t3,
         warehouse.supply t4,
         warehouse.place t5
    where t1.brand_id = t2.brand_id
      and t1.type_id = t3.type_id
      and t1.supply_id = t4.supply_id
      and t1.place_id = t5.place_id
    <if test="storeId != null"> and t1.store_id =#{storeId}</if>
    <if test="productName != null and productName != ''"> and t1.product_name like concat('%',#{productName},'%')</if>
    <if test="brandName != null and brandName != ''"> and t2.brand_name like concat('%',#{brandName},'%')</if>
    <if test="typeName != null and typeName != ''"> and t3.type_name like concat('%',#{typeName},'%')</if>
    <if test="supplyName != null and supplyName != ''"> and t4.supply_name like concat('%',#{supplyName},'%')</if>
    <if test="placeName != null and placeName != ''"> and t5.place_name like concat('%',#{placeName},'%')</if>
    <if test="upDownState != null and upDownState != ''"> and t1.up_down_state = #{upDownState}</if>
    <if test="isOverDate == 1"> and t1.supp_date &lt;= now()</if>
    <if test="isOverDate == 0"> and t1.supp_date &gt; now()</if>
</select>

<select id="findProductAllPage" resultType="com.wmpn.entity.Product">
    select t1.*,t2.brand_name as brandName,t3.type_name as typeName,t4.supply_name as supplyName,t5.place_name as placeName,t6.unit_name as unitName,
        t7.store_name as storeName
    from warehouse.product t1,
         warehouse.brand t2,
         warehouse.product_type t3,
         warehouse.supply t4,
         warehouse.place t5,
        warehouse.unit t6,
        warehouse.store t7
    where t1.brand_id = t2.brand_id
      and t1.type_id = t3.type_id
      and t1.supply_id = t4.supply_id
      and t1.place_id = t5.place_id
      and t1.unit_id =t6.unit_id
    and t1.store_id =t7.store_id
    <if test="product.storeId != null"> and t1.store_id =#{product.storeId}</if>
    <if test="product.productName != null and product.productName != ''"> and t1.product_name like concat('%',#{product.productName},'%')</if>
    <if test="product.brandName != null and product.brandName != ''"> and t2.brand_name like concat('%',#{product.brandName},'%')</if>
    <if test="product.typeName != null and product.typeName != ''"> and t3.type_name like concat('%',#{product.typeName},'%')</if>
    <if test="product.supplyName != null and product.supplyName != ''"> and t4.supply_name like concat('%',#{product.supplyName},'%')</if>
    <if test="product.placeName != null and product.placeName != ''"> and t5.place_name like concat('%',#{product.placeName},'%')</if>
    <if test="product.upDownState != null and product.upDownState != ''"> and t1.up_down_state = #{product.upDownState}</if>
    <if test="product.isOverDate == 1"> and t1.supp_date &lt;= now()</if>
    <if test="product.isOverDate == 0"> and t1.supp_date &gt; now()</if>
        order by t1.create_time desc
    limit #{page.limitIndex},#{page.pageSize}
    </select>

<insert id="insertProduct">
    INSERT INTO warehouse.product(store_id, brand_id, product_name, product_num, product_invent, type_id, supply_id,
                                  place_id, unit_id, introduce, up_down_state, in_price, sale_price, mem_price,
                                  create_time,  create_by, imgs, product_date, supp_date)
    VALUES (#{storeId}, #{brandId}, #{productName}, #{productNum}, #{productInvent}, #{typeId}, #{supplyId}, #{placeId},
            #{unitId}, #{introduce}, 0, #{inPrice},#{salePrice},#{memPrice},now(),#{createBy},#{imgs},#{productDate},#{suppDate})
</insert>

<delete id="removeProductByPids">
    delete
    from warehouse.product
    where product_id in
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
</delete>
</mapper>